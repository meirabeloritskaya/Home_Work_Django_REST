name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: Home_Work_Django_REST_NEW
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Meira4232953
        ports:
          - 5432:5432

      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run migrations
        run: |
          sleep 10  # ожидание запуска PostgreSQL
          echo "SELECT 1;" | PGPASSWORD=$POSTGRES_PASSWORD psql -U $POSTGRES_USER -h postgres $POSTGRES_DB
          poetry run python manage.py migrate

      - name: Run tests
        run: |
          poetry run python manage.py test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose-plugin

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo service postgresql start
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'Meira4232953';"
          sudo -u postgres psql -c "CREATE DATABASE Home_Work_Django_REST_NEW;"
          sudo -u postgres psql -c "CREATE USER postgres WITH PASSWORD 'Meira4232953';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE Home_Work_Django_REST_NEW TO postgres;"

      - name: Log in to Docker Hub
        run: echo $DOCKER_HUB_ACCESS_TOKEN | docker login --username $DOCKER_HUB_USERNAME --password-stdin

      - name: Build Docker Image
        run: |
          docker compose build

      - name: Push Docker Image
        run: |
          docker compose push

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: $SERVER_HOST
          username: $SERVER_USER
          key: $SSH_PRIVATE_KEY
          script: |
            cd /path/to/your/project
            docker compose down
            docker compose pull
            docker compose up -d

      - name: Deploy to Render
        run: |
          curl -X POST $RENDER_DEPLOY_HOOK
