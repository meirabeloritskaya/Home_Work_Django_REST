name: Django CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout code

          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v3
          with:
            python-version: '3.12'


        - name: Install dependencies
          run: |
            pip install poetry
            poetry install
        - name: Set up PostgreSQL
          run: |
            sudo apt-get update
            sudo apt-get install -y postgresql-client
            sudo service postgresql start
            sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'Meira4232953';"
            sudo -u postgres psql -c "CREATE DATABASE Home_Work_Django_REST_NEW;"
            sudo -u postgres psql -c "CREATE ROLE runner WITH LOGIN PASSWORD 'Meira4232953';"
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE Home_Work_Django_REST_NEW TO runner;"
            sudo -u postgres psql -c "GRANT CREATE ON SCHEMA public TO runner;"
            echo "DATABASE_URL=postgres://runner:Meira4232953@localhost/Home_Work_Django_REST_NEW" >> $GITHUB_ENV

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.32.4/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose

      - name: Log in to Docker Hub
        shell: bash
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin


      - name: Build Docker Image
        run: |
          docker-compose build

      - name: Push Docker Image
        run: |
          docker-compose push

      - name: Deploy to Render
        run: |
          curl -X POST $RENDER_DEPLOY_HOOK
