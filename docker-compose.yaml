services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"
    networks:
      - app_network
    dns:
      - 8.8.8.8
      - 1.1.1.1
  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app_network
    dns:
      - 8.8.8.8
      - 1.1.1.1

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/code
    networks:
      - app_network
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 1.1.1.1

  celery:
    build: .
    tty: true
    command:  sh -c "poetry run celery -A config worker --loglevel=info"
    restart: on-failure
    depends_on:
      - redis
      - db
    volumes:
      - .:/code
    networks:
      - app_network
    dns:
      - 8.8.8.8
      - 1.1.1.1
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: sh -c "poetry run celery -A config beat --loglevel=info"
    restart: on-failure
    depends_on:
      - redis
      - db
    volumes:
      - .:/code
    networks:
      - app_network
    dns:
      - 8.8.8.8
      - 1.1.1.1
    env_file:
      - .env
volumes:
  pg_data:

networks:
  app_network:
    driver: bridge
